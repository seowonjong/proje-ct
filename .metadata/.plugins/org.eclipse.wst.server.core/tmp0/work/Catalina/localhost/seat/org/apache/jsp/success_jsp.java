/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-08-26 00:39:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.Connection;

public final class success_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/db.jsp", Long.valueOf(1755822454163L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Class.forName("oracle.jdbc.OracleDriver");
	Connection con = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xe", "system", "1234");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>좌석예약조회(성공)</title>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	font-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	background: #f7f7f7;\r\n");
      out.write("	color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("section {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	min-height: calc(100vh - 130px);\r\n");
      out.write("	padding: 40px 20px;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	background: #f7f7f7;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("section h2 {\r\n");
      out.write("	font-size: 26px;\r\n");
      out.write("	color: #2c3e50;\r\n");
      out.write("	margin-bottom: 30px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("	width: 90%;\r\n");
      out.write("	max-width: 900px;\r\n");
      out.write("	border-collapse: collapse;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	overflow: hidden;\r\n");
      out.write("	box-shadow: 0 4px 20px rgba(0,0,0,0.1);\r\n");
      out.write("	background: #fff;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("thead {\r\n");
      out.write("	background: linear-gradient(90deg, #3498db, #2980b9);\r\n");
      out.write("	color: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("thead th {\r\n");
      out.write("	padding: 15px;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tbody td {\r\n");
      out.write("	padding: 12px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	border-bottom: 1px solid #ddd;\r\n");
      out.write("	font-size: 15px;\r\n");
      out.write("	color: #555;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tbody tr:hover {\r\n");
      out.write("	background-color: #ecf6fc;\r\n");
      out.write("	transition: background 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"button\"] {\r\n");
      out.write("	padding: 10px 20px;\r\n");
      out.write("	font-size: 15px;\r\n");
      out.write("	background: #3498db;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	transition: background 0.3s;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"button\"]:hover {\r\n");
      out.write("	background: #2980b9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@media (max-width: 768px) {\r\n");
      out.write("	section h2 {\r\n");
      out.write("		font-size: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	table {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("	}\r\n");
      out.write("	thead th, tbody td {\r\n");
      out.write("		padding: 10px;\r\n");
      out.write("		font-size: 14px;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Footer 고정 */\r\n");
      out.write("footer {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 50px;\r\n");
      out.write("	background-color: #2c3e50;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	line-height: 50px;\r\n");
      out.write("	position: fixed;\r\n");
      out.write("	bottom: 0;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	font-size: 0.9rem;\r\n");
      out.write("	box-shadow: 0 -2px 5px rgba(0,0,0,0.1);\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "nav.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<section>\r\n");

	request.setCharacterEncoding("utf-8");
	String emptno = request.getParameter("emptno");

      out.write("\r\n");
      out.write("<h2>사원번호 : ");
      out.print(emptno);
      out.write("님의 좌석예약 조회</h2>\r\n");
      out.write("<div>\r\n");
      out.write("<table>\r\n");
      out.write("<thead>\r\n");
      out.write("<tr>\r\n");
      out.write("	<th>사원번호</th>\r\n");
      out.write("	<th>이름</th>\r\n");
      out.write("	<th>근무일자</th>\r\n");
      out.write("	<th>좌석번호</th>\r\n");
      out.write("	<th>좌석위치</th>\r\n");
      out.write("	<th>내선번호</th>\r\n");
      out.write("</tr>\r\n");
      out.write("</thead>\r\n");
      out.write("<tbody>\r\n");

	PreparedStatement pstmt = null;
	ResultSet rs = null;
	String resvdate = "";
	String newDate = "";
	try {
		String sql = "SELECT em.empno, em.empname, re.resvdate, se.seatno, se.office, se.callno " +
					 "FROM tbl_emp_2504 em " +
					 "JOIN tbl_resv_2504 re ON em.empno = re.empno " +
					 "JOIN tbl_seat_2504 se ON se.seatno = re.seatno AND em.empno = ? " +
					 "ORDER BY re.resvdate DESC";

		pstmt = con.prepareStatement(sql);
		pstmt.setString(1, emptno);
		rs = pstmt.executeQuery();
		while(rs.next()){
			resvdate = rs.getString("resvdate");
			newDate = resvdate.substring(0,4) + "년" + resvdate.substring(4,6) + "월" + resvdate.substring(6,8) + "일";

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>");
      out.print(rs.getString("empno"));
      out.write("</td>\r\n");
      out.write("	<td>");
      out.print(rs.getString("empname"));
      out.write("</td>\r\n");
      out.write("	<td>");
      out.print(newDate);
      out.write("</td>\r\n");
      out.write("	<td>");
      out.print(rs.getString("seatno"));
      out.write("</td>\r\n");
      out.write("	<td>");
      out.print(rs.getString("office"));
      out.write("</td>\r\n");
      out.write("	<td>");
      out.print(rs.getString("callno"));
      out.write("</td>\r\n");
      out.write("</tr>\r\n");

		}
	} catch(Exception e){
		e.printStackTrace();
	} finally {
		if(rs != null) try{ rs.close(); } catch(Exception e){}
		if(pstmt != null) try{ pstmt.close(); } catch(Exception e){}
		if(con != null) try{ con.close(); } catch(Exception e){}
	}

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<input type=\"button\" value=\"돌아가기\" onclick=\"window.location.href='slist.jsp'\">\r\n");
      out.write("</div>\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
