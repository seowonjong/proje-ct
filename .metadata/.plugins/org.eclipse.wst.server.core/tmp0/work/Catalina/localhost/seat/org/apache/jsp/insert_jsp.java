/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-08-25 01:55:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class insert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>insert</title>\r\n");
      out.write("<style>\r\n");
      out.write("	* {\r\n");
      out.write("		margin: 0;\r\n");
      out.write("		padding: 0;\r\n");
      out.write("		box-sizing: border-box;\r\n");
      out.write("		font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	body {\r\n");
      out.write("		background-color: #f9fafb;\r\n");
      out.write("		color: #333;\r\n");
      out.write("		line-height: 1.6;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	/* 메인 섹션 */\r\n");
      out.write("	section {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		min-height: calc(100vh - 200px);\r\n");
      out.write("		background: #fff;\r\n");
      out.write("		padding: 40px 20px;\r\n");
      out.write("		display: flex;\r\n");
      out.write("		flex-direction: column;\r\n");
      out.write("		align-items: center;\r\n");
      out.write("		justify-content: flex-start;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	section h2 {\r\n");
      out.write("		font-size: 2rem;\r\n");
      out.write("		margin-bottom: 30px;\r\n");
      out.write("		color: #2c3e50;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	/* 폼 디자인 */\r\n");
      out.write("	form {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		max-width: 500px;\r\n");
      out.write("		background: #ffffff;\r\n");
      out.write("		padding: 30px 20px;\r\n");
      out.write("		border-radius: 12px;\r\n");
      out.write("		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.table-row {\r\n");
      out.write("		display: flex;\r\n");
      out.write("		flex-direction: column;\r\n");
      out.write("		text-align: left;\r\n");
      out.write("		margin-bottom: 15px;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	label {\r\n");
      out.write("		margin-bottom: 5px;\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("		color: #2c3e50;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	input[type=\"text\"] {\r\n");
      out.write("		padding: 10px;\r\n");
      out.write("		border: 1px solid #ccc;\r\n");
      out.write("		border-radius: 6px;\r\n");
      out.write("		font-size: 1rem;\r\n");
      out.write("		transition: border-color 0.3s ease;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	input[type=\"text\"]:focus {\r\n");
      out.write("		border-color: #1abc9c;\r\n");
      out.write("		outline: none;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	/* 버튼 스타일 */\r\n");
      out.write("	.button-group {\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		margin-top: 20px;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	input[type=\"button\"] {\r\n");
      out.write("		background: #1abc9c;\r\n");
      out.write("		color: #fff;\r\n");
      out.write("		border: none;\r\n");
      out.write("		padding: 10px 20px;\r\n");
      out.write("		font-size: 1rem;\r\n");
      out.write("		border-radius: 6px;\r\n");
      out.write("		margin: 0 5px;\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		transition: background 0.3s ease;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	input[type=\"button\"]:hover {\r\n");
      out.write("		background: #16a085;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	/* 반응형 */\r\n");
      out.write("	@media (max-width: 600px) {\r\n");
      out.write("		section h2 {\r\n");
      out.write("			font-size: 1.5rem;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		form {\r\n");
      out.write("			padding: 20px 15px;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "nav.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<section>\r\n");
      out.write("		<h2>근무좌석예약</h2>\r\n");
      out.write("		<form name=\"frm\" action=\"action.jsp\">\r\n");
      out.write("			<div class=\"table-row\">\r\n");
      out.write("				<label for=\"resvno\">예약번호</label>\r\n");
      out.write("				<input type=\"text\" name=\"resvno\" id=\"resvno\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"table-row\">\r\n");
      out.write("				<label for=\"emptno\">사원번호</label>\r\n");
      out.write("				<input type=\"text\" name=\"emptno\" id=\"emptno\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"table-row\">\r\n");
      out.write("				<label for=\"resvdate\">근무일자</label>\r\n");
      out.write("				<input type=\"text\" name=\"resvdate\" id=\"resvdate\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"table-row\">\r\n");
      out.write("				<label for=\"seatno\">좌석번호</label>\r\n");
      out.write("				<input type=\"text\" name=\"seatno\" id=\"seatno\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"button-group\">\r\n");
      out.write("				<input type=\"button\" value=\"등록\" onclick=\"insertCheck()\">\r\n");
      out.write("				<input type=\"button\" value=\"다시쓰기\" onclick=\"insertReset()\">\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</section>\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\" src=\"check.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
